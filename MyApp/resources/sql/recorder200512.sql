/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 80019
 Source Host           : localhost:3306
 Source Schema         : recorder

 Target Server Type    : MySQL
 Target Server Version : 80019
 File Encoding         : 65001

 Date: 12/05/2020 00:01:43
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for t_article
-- ----------------------------
DROP TABLE IF EXISTS `t_article`;
CREATE TABLE `t_article`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `type` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci,
  `contentText` longtext CHARACTER SET utf8 COLLATE utf8_general_ci,
  `clickCount` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `sortNo` int(0) DEFAULT NULL,
  `createUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_article
-- ----------------------------
INSERT INTO `t_article` VALUES ('0448d7c08b6211ea973e650c8a2f6d43', '解析html5 canvas实现背景鼠标连线动态效果代码', 't2', '<div><code>//立即执行函数</code></div>\n<div><code>//!的作用是告诉javascript引擎这是一个函数表达式，不是函数声明，()、！、+、-等运算符都能实现这个作用，不过()是最安全的</code></div>\n<div><code>//在!function(){}后面加上()会立即调用这个函数</code></div>\n<div><code>//这样做可以模仿一个私有作用域，这样html文件引用多个js文件时便不会造成变量冲突</code></div>\n<div><code>!</code></div>\n<div><code>function() {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//canvas元素相关</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//创建canvas元素，并设置canvas元素的id</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>var canvas = document.createElement(\"canvas\"),</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context = canvas.getContext(\"2d\"),</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>attr = getAttr();</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//设置创建的canvas的相关属性</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>canvas.id = \"c_n\" + attr.length;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>canvas.style.cssText = \"position:fixed;top:0;left:0;z-index:\" + attr.z + \";opacity:\" + attr.opacity;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//将canvas元素添加到body元素中</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>document.getElementsByTagName(\"body\")[0].appendChild(canvas);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//该函数设置了canvas元素的width属性和height属性</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>getWindowWH();</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//onresize 事件会在窗口或框架被调整大小时发生</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//此处即为当窗口大小改变时，重新获取窗口的宽高和设置canvas元素的宽高</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>window.onresize = getWindowWH;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//该函数会得到引用了本文件的script元素，</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//因为本文件中在赋值时执行了一次getScript函数，html文件引用本文件时，本文件之后的script标签还没有被浏览器解释，</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//所以得到的script数组中，引用了本文的script元素在该数组的末尾</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//该函数的用意为使开发者能直接修改在html中引入该文件的script元素的属性来修改画布的一些属性，画布的z-index，透明度和小方块数量，颜色</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//与前面往body元素添加canvas元素的代码配合，当开发者想要使用该特效作为背景时，只需在html文件中添加script元素并引用本文件即可</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>function getAttr() {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>let scripts = document.getElementsByTagName(\"script\"),</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>len = scripts.length,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>script = scripts[len - 1]; //v为最后一个script元素，即引用了本文件的script元素</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>length: len,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>z: script.getAttribute(\"zIndex\") || -1,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>opacity: script.getAttribute(\"opacity\") || 0.5,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>color: script.getAttribute(\"color\") || \"0,0,0\",</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>count: script.getAttribute(\"count\") || 99</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//获得窗口宽高，并设置canvas元素宽高</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>function getWindowWH() {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>W = canvas.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>H = canvas.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//生成随机位置的小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>var random = Math.random,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>squares = []; //存放小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//往squares[]数组放小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for (let p = 0; p &lt; </code><code>attr.count</code><code>; p++) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>var </code><code>square_x</code> <code>= </code><code>random</code><code>() * W,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//横坐标</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>square_y</code> <code>= </code><code>random</code><code>() * H,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//纵坐标</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>square_xa</code> <code>= </code><code>2</code> <code>* random() - 1,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//x轴位移 -1,1</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>square_ya</code> <code>= </code><code>2</code> <code>* random() - 1; //y轴位移</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>squares.push({</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>x: square_x,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>y: square_y,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>xa: square_xa,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ya: square_ya,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>max: 6000</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>})</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//生成鼠标小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>var mouse = {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>x: null,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>y: null,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>max: 20000</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>};</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//获取鼠标所在坐标</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>window.onmousemove</code> <code>= </code><code>function</code><code>(i) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//i为W3C DOM，window.event 为 IE DOM，以实现兼容IE</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//不过目前似乎IE已经支持W3C DOM，我用的是IE11，我注释掉下一句代码也能实现鼠标交互效果，</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//网上说7/8/9是不支持的，本人没有试验，</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//当然加上是没有错的</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>i</code> <code>= i || window.event;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>mouse.x</code> <code>= </code><code>i</code><code>.clientX;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>mouse.y</code> <code>= </code><code>i</code><code>.clientY;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//鼠标移出窗口后，消除鼠标小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>window.onmouseout</code> <code>= </code><code>function</code><code>() {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>mouse.x</code> <code>= </code><code>null</code><code>;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>mouse.y</code> <code>= </code><code>null</code><code>;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//绘制小方块，小方块移动(碰到边界反向移动)，小方块受鼠标束缚</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>var </code><code>animation</code> <code>= </code><code>window</code><code>.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>function(i) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>window.setTimeout(i, 1000 / 45)</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}; //各个浏览器支持的requestAnimationFrame有所不同，兼容各个浏览器</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>function draw() {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//清除画布</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.clearRect(0, 0, W, H);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>var w = [mouse].concat(squares); //连接(合并)鼠标小方块数组和其他小方块数组</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>var x, v, A, B, z, y;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//square属性表：x，y，xa，ya，max</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>squares.forEach(function(i) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//实现小方块定向移动</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>i.x += i.xa;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>i.y += i.ya;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>// 控制小方块移动方向</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>// 当小方块达到窗口边界时，反向移动</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>i.xa</code> <code>= i.xa * (i.x &gt; W || i.x &lt; </code><code>0</code> <code>? -1 : 1);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>i.ya</code> <code>= i.ya * (i.y &gt; H || i.y &lt; </code><code>0</code> <code>? -1 : 1);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//fillRect前两个参数为矩形左上角的x，y坐标，后两个分别为宽度和高度</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//绘制小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.fillRect(i.x - 0.5, i.y - 0.5, 1, 1);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//遍历w中所有元素</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for (let </code><code>n</code> <code>= </code><code>0</code><code>; n &lt; w.length; n++) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>x</code> <code>= </code><code>w</code><code>[n];</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//如果x与i不是同一个对象实例且x的xy坐标存在</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if (i !== x &amp;&amp; null !== x.x &amp;&amp; null !== x.y) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>x_diff</code> <code>= i.x - x.x; //i和x的x坐标差</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>y_diff</code> <code>= i.y - x.y; //i和x的y坐标差</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>distance</code> <code>= </code><code>x_diff</code> <code>* x_diff + y_diff * y_diff; //斜边平方</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if (distance &lt; x.max) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//使i小方块受鼠标小方块束缚，即如果i小方块与鼠标小方块距离过大，i小方块会被鼠标小方块束缚,</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//造成 多个小方块以鼠标为圆心，mouse.max/2为半径绕成一圈</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if (x === mouse &amp;&amp; distance &gt; x.max / 2) {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>i.x = i.x - 0.03 * x_diff;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>i.y = i.y - 0.03 * y_diff;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>A = (x.max - distance) / x.max;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.beginPath();</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//设置画笔的画线的粗细与两个小方块的距离相关，范围0-0.5，两个小方块距离越远画线越细，达到max时画线消失</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.lineWidth = A / 2;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//设置画笔的画线颜色为s.c即画布颜色，透明度为(A+0.2)即两个小方块距离越远画线越淡</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.strokeStyle = \"rgba(\" + attr.color + \",\" + (A + 0.2) + \")\";</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//设置画笔的笔触为i小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.moveTo(i.x, i.y);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//使画笔的笔触移动到x小方块</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.lineTo(x.x, x.y);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//完成画线的绘制，即绘制连接小方块的线</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>context.stroke();</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//把i小方块从w数组中去掉</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//防止两个小方块重复连线</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>w.splice(w.indexOf(i), 1);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>});</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//window.requestAnimationFrame与setTimeout相似，形成递归调用，</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//不过window.requestAnimationFrame采用系统时间间隔，保持最佳绘制效率,提供了更好地优化，使动画更流畅</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//经过浏览器优化，动画更流畅；</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//窗口没激活时，动画将停止，省计算资源;</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>animation(draw);</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>//此处是等待0.1秒后，执行一次draw()，真正的动画效果是用window.requestAnimationFrame实现的</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>setTimeout(function() {</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>draw();</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>},</code></div>\n<div><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>100)</code></div>\n<div><code>} ();</code></div>', '//立即执行函数\n//!的作用是告诉javascript引擎这是一个函数表达式，不是函数声明，()、！、+、-等运算符都能实现这个作用，不过()是最安全的\n//在!function(){}后面加上()会立即调用这个函数\n//这样做可以模仿一个私有作用域，这样html文件引用多个js文件时便不会造成变量冲突\n!\nfunction() {\n    //canvas元素相关\n    //创建canvas元素，并设置canvas元素的id\n    var canvas = document.createElement(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    attr = getAttr();\n    //设置创建的canvas的相关属性\n    canvas.id = \"c_n\" + attr.length;\n    canvas.style.cssText = \"position:fixed;top:0;left:0;z-index:\" + attr.z + \";opacity:\" + attr.opacity;\n    //将canvas元素添加到body元素中\n    document.getElementsByTagName(\"body\")[0].appendChild(canvas);\n    //该函数设置了canvas元素的width属性和height属性\n    getWindowWH();\n    //onresize 事件会在窗口或框架被调整大小时发生\n    //此处即为当窗口大小改变时，重新获取窗口的宽高和设置canvas元素的宽高\n    window.onresize = getWindowWH;\n    //该函数会得到引用了本文件的script元素，\n    //因为本文件中在赋值时执行了一次getScript函数，html文件引用本文件时，本文件之后的script标签还没有被浏览器解释，\n    //所以得到的script数组中，引用了本文的script元素在该数组的末尾\n    //该函数的用意为使开发者能直接修改在html中引入该文件的script元素的属性来修改画布的一些属性，画布的z-index，透明度和小方块数量，颜色\n    //与前面往body元素添加canvas元素的代码配合，当开发者想要使用该特效作为背景时，只需在html文件中添加script元素并引用本文件即可\n    function getAttr() {\n        let scripts = document.getElementsByTagName(\"script\"),\n        len = scripts.length,\n        script = scripts[len - 1]; //v为最后一个script元素，即引用了本文件的script元素\n        return {\n            length: len,\n            z: script.getAttribute(\"zIndex\") || -1,\n            opacity: script.getAttribute(\"opacity\") || 0.5,\n            color: script.getAttribute(\"color\") || \"0,0,0\",\n            count: script.getAttribute(\"count\") || 99\n        }\n    }\n    //获得窗口宽高，并设置canvas元素宽高\n    function getWindowWH() {\n        W = canvas.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n        H = canvas.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n    }\n    //生成随机位置的小方块\n    var random = Math.random,\n    squares = []; //存放小方块\n    //往squares[]数组放小方块\n    for (let p = 0; p < attr.count; p++) {\n        var square_x = random() * W,\n        //横坐标\n        square_y = random() * H,\n        //纵坐标\n        square_xa = 2 * random() - 1,\n        //x轴位移 -1,1\n        square_ya = 2 * random() - 1; //y轴位移\n        squares.push({\n            x: square_x,\n            y: square_y,\n            xa: square_xa,\n            ya: square_ya,\n            max: 6000\n        })\n    }\n    //生成鼠标小方块\n    var mouse = {\n        x: null,\n        y: null,\n        max: 20000\n    };\n    //获取鼠标所在坐标\n    window.onmousemove = function(i) {\n        //i为W3C DOM，window.event 为 IE DOM，以实现兼容IE\n        //不过目前似乎IE已经支持W3C DOM，我用的是IE11，我注释掉下一句代码也能实现鼠标交互效果，\n        //网上说7/8/9是不支持的，本人没有试验，\n        //当然加上是没有错的\n        i = i || window.event;\n        mouse.x = i.clientX;\n        mouse.y = i.clientY;\n    }\n    //鼠标移出窗口后，消除鼠标小方块\n    window.onmouseout = function() {\n        mouse.x = null;\n        mouse.y = null;\n    }\n    //绘制小方块，小方块移动(碰到边界反向移动)，小方块受鼠标束缚\n    var animation = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function(i) {\n        window.setTimeout(i, 1000 / 45)\n    }; //各个浏览器支持的requestAnimationFrame有所不同，兼容各个浏览器\n    function draw() {\n        //清除画布\n        context.clearRect(0, 0, W, H);\n        var w = [mouse].concat(squares); //连接(合并)鼠标小方块数组和其他小方块数组\n        var x, v, A, B, z, y;\n        //square属性表：x，y，xa，ya，max\n        squares.forEach(function(i) {\n            //实现小方块定向移动\n            i.x += i.xa;\n            i.y += i.ya;\n            // 控制小方块移动方向\n            // 当小方块达到窗口边界时，反向移动\n            i.xa = i.xa * (i.x > W || i.x < 0 ? -1 : 1);\n            i.ya = i.ya * (i.y > H || i.y < 0 ? -1 : 1);\n            //fillRect前两个参数为矩形左上角的x，y坐标，后两个分别为宽度和高度\n            //绘制小方块\n            context.fillRect(i.x - 0.5, i.y - 0.5, 1, 1);\n            //遍历w中所有元素\n            for (let n = 0; n < w.length; n++) {\n                x = w[n];\n                //如果x与i不是同一个对象实例且x的xy坐标存在\n                if (i !== x && null !== x.x && null !== x.y) {\n                    x_diff = i.x - x.x; //i和x的x坐标差\n                    y_diff = i.y - x.y; //i和x的y坐标差\n                    distance = x_diff * x_diff + y_diff * y_diff; //斜边平方\n                    if (distance < x.max) {\n                        //使i小方块受鼠标小方块束缚，即如果i小方块与鼠标小方块距离过大，i小方块会被鼠标小方块束缚,\n                        //造成 多个小方块以鼠标为圆心，mouse.max/2为半径绕成一圈\n                        if (x === mouse && distance > x.max / 2) {\n                            i.x = i.x - 0.03 * x_diff;\n                            i.y = i.y - 0.03 * y_diff;\n                        }\n                        A = (x.max - distance) / x.max;\n                        context.beginPath();\n                        //设置画笔的画线的粗细与两个小方块的距离相关，范围0-0.5，两个小方块距离越远画线越细，达到max时画线消失\n                        context.lineWidth = A / 2;\n                        //设置画笔的画线颜色为s.c即画布颜色，透明度为(A+0.2)即两个小方块距离越远画线越淡\n                        context.strokeStyle = \"rgba(\" + attr.color + \",\" + (A + 0.2) + \")\";\n                        //设置画笔的笔触为i小方块\n                        context.moveTo(i.x, i.y);\n                        //使画笔的笔触移动到x小方块\n                        context.lineTo(x.x, x.y);\n                        //完成画线的绘制，即绘制连接小方块的线\n                        context.stroke();\n                    }\n                }\n            }\n            //把i小方块从w数组中去掉\n            //防止两个小方块重复连线\n            w.splice(w.indexOf(i), 1);\n        });\n        //window.requestAnimationFrame与setTimeout相似，形成递归调用，\n        //不过window.requestAnimationFrame采用系统时间间隔，保持最佳绘制效率,提供了更好地优化，使动画更流畅\n        //经过浏览器优化，动画更流畅；\n        //窗口没激活时，动画将停止，省计算资源;\n        animation(draw);\n    }\n    //此处是等待0.1秒后，执行一次draw()，真正的动画效果是用window.requestAnimationFrame实现的\n    setTimeout(function() {\n        draw();\n    },\n    100)\n} ();', '5', NULL, '1', '2020-05-01 12:12:48', '2020-05-02 17:04:35');
INSERT INTO `t_article` VALUES ('2c21dbf07b2e11eaae4b77d51fd26c8b', 'javascript学习', 't2', '<h1>转Number类型</h1>\n<p>String转化为Number；日期输出时间戳。</p>\n<pre><code>&nbsp;</code></pre>\n<p>会自动转化为Number类型的。日期取时间戳不用new Date().getTime()。、</p>\n<p><span style=\"background-color: #f1f1f1; font-family: Consolas, Menlo, Courier, monospace; font-size: 1em;\">+\'45\'//45&nbsp;</span></p>\n<p><span style=\"background-color: #f1f1f1; font-family: Consolas, Menlo, Courier, monospace; font-size: 1em;\">+new Date() //自动转为13位的时间戳</span></p>\n<p>&nbsp;</p>\n<h1>单行写一个评级组件</h1>\n<p>let rate = 3;&nbsp;</p>\n<p>\"★★★★★☆☆☆☆☆\".slice(5 - rate, 10 - rate);//\"★★★☆☆\"&nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<h1>数组去重</h1>\n<pre><code>let array=[1, \"1\", 2, 1, 1, 3];<br />//拓展运算符(...)内部使用for...of循环<br />[...new Set(array)];//[1, \"1\", 2, 3]<br />//利用Array.from将Set结构转换成数组<br />Array.from(new Set(array));//[1, \"1\", 2, 3]</code></pre>\n<p>&nbsp;</p>', '转Number类型\n\nString转化为Number；日期输出时间戳。\n\n \n\n会自动转化为Number类型的。日期取时间戳不用new Date().getTime()。、\n\n+\'45\'//45 \n\n+new Date() //自动转为13位的时间戳\n\n\n\n\n单行写一个评级组件\n\nlet rate = 3; \n\n\"★★★★★☆☆☆☆☆\".slice(5 - rate, 10 - rate);//\"★★★☆☆\"  \n\n\n\n\n数组去重\nlet array=[1, \"1\", 2, 1, 1, 3];\n//拓展运算符(...)内部使用for...of循环\n[...new Set(array)];//[1, \"1\", 2, 3]\n//利用Array.from将Set结构转换成数组\nArray.from(new Set(array));//[1, \"1\", 2, 3]\n\n\n', '0', NULL, NULL, '2020-04-10 21:21:22', '2020-04-10 21:25:36');
INSERT INTO `t_article` VALUES ('2e218de0896311ea89e8bd0b8d90be65', '打卡第一天', 't6', '<p>2020028，打卡第一天</p>\n<p>调整了表格的参数</p>\n<p>调整了后端文章相关的接口名称</p>', '2020028，打卡第一天\n\n调整了表格的参数\n\n调整了后端文章相关的接口名称', '11', NULL, '1', '2020-04-28 23:16:05', '2020-04-28 23:43:19');
INSERT INTO `t_article` VALUES ('8b3305b0781311eaa366b568abcf0f2e', '这是第一篇日志', 't6', '<p><span style=\"font-size: medium;\">今天是2020年4月6日</span></p>\n<p><span style=\"font-size: medium;\">在家工作已两个月，两个月前，公司接了腾讯的防疫健康小程序，我们便进入了疯狂的加班阶段，一天17~8个小时成了家常便饭。</span></p>\n<p><span style=\"font-size: medium;\">这两个月内：</span></p>\n<ol>\n<li><span style=\"font-size: medium;\">学习了小程序的开发部署流程，开发记账小程序</span></li>\n<li><span style=\"font-size: medium;\">重新拾起了git，使用github pages部署了自己的前端工程</span></li>\n<li><span style=\"font-size: medium;\">重构了自己的node后端小框架</span></li>\n<li><span style=\"font-size: medium;\">学习了css，模拟淘宝首页写了个demo，</span></li>\n<li><span style=\"font-size: medium;\">学习了react基本搭建开发流程</span></li>\n<li><span style=\"font-size: medium;\">学习webpack的基本使用，终于稍微能看懂webpack的配置文件</span></li>\n<li><span style=\"font-size: medium;\">使用vue-cli + iview搭建了本项</span></li>\n</ol>', '今天是2020年4月6日\n\n在家工作已两个月，两个月前，公司接了腾讯的防疫健康小程序，我们便进入了疯狂的加班阶段，一天17~8个小时成了家常便饭。\n\n这两个月内：\n\n学习了小程序的开发部署流程，开发记账小程序\n重新拾起了git，使用github pages部署了自己的前端工程\n重构了自己的node后端小框架\n学习了css，模拟淘宝首页写了个demo，\n学习了react基本搭建开发流程\n学习webpack的基本使用，终于稍微能看懂webpack的配置文件\n使用vue-cli + iview搭建了本项', '1', NULL, NULL, '2020-04-06 22:33:12', '2020-04-29 19:32:54');
INSERT INTO `t_article` VALUES ('a6761db0781011eaa366b568abcf0f2e', 'dfasdfa', 't3', '<p>dfafasdfasdf</p>', 'dfafasdfasdf', '0', NULL, NULL, '2020-04-06 22:12:29', '2020-04-07 23:00:51');
INSERT INTO `t_article` VALUES ('eb0cbe008c4e11ea973e650c8a2f6d43', 'http', 't1', '<h1>HTTP协议</h1>\n<p>HTTP协议（HyperText Transfer Protocol，超文本传输协议），是用于从www服务器传输超文本到本地浏览器的传送协议。</p>\n<p>TCP：Transmission Control Protocol传输控制协议</p>\n<p>IP：Internet Protocol网际协议</p>\n<p>&nbsp;</p>\n<h1><strong>HTTP请求响应模型</strong></h1>\n<p>HTTP由请求和响应构成，是一个标准的客户端服务器模型（B/S）。HTTP协议永远都是客户端发起请求，服务器回送响应。</p>\n<p>HTTP是一个无状态的协议，无状态指客户端和服务端之间不建立持久的连接，这意味着当客户端向服务端发送请求（request），服务端返回响应（response）之后，连接就会被关闭，在服务器端不保留连接相关的信息。</p>\n<h1>HTTPs</h1>\n<p>https = http + ssl(安全套接层)</p>\n<p>&nbsp;</p>\n<p>HTTPS（全称：Hypertext Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL。其所用的端口号是443。</p>\n<p>&nbsp;</p>\n<div>SSL：安全套接层，是netscape公司设计的主要用于web的安全传输协议。这种协议在WEB上获得了广泛的应用。通过证书认证来确保客户端和网站服务器之间的通信数据是加密安全的。</div>\n<div>&nbsp;</div>\n<div>\n<p>有两种基本的加解密<a class=\"replace_word\" title=\"算法与数据结构知识库\" href=\"http://lib.csdn.net/base/datastructure\" target=\"_blank\" rel=\"noopener\">算法</a>类型：</p>\n<p>&nbsp; &nbsp; &nbsp; 1）对称加密（symmetric encryption）：密钥只有一个，加密解密为同一个密码，且加解密速度快，典型的对称加密<a class=\"replace_word\" title=\"算法与数据结构知识库\" href=\"http://lib.csdn.net/base/datastructure\" target=\"_blank\" rel=\"noopener\">算法</a>有DES、AES，RC5，3DES等；</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp;对称加密主要问题是共享秘钥，除你的计算机（客户端）知道另外一台计算机（服务器）的私钥秘钥，否则无法对通信流进行加密解密。解决这个问题的方案非对称秘钥。</p>\n<p>&nbsp; &nbsp; &nbsp; 2）非对称加密：使用两个秘钥：公共秘钥和私有秘钥。私有秘钥由一方密码保存（一般是服务器保存），另一方任何人都可以获得公共秘钥。</p>\n<p>&nbsp; &nbsp; &nbsp; 这种密钥成对出现（且根据公钥无法推知私钥，根据私钥也无法推知公钥），加密解密使用不同密钥（公钥加密需要私钥解密），相对对称加密速度较慢，典型的非对称加密算法有RSA、DSA等。</p>\n</div>\n<p>&nbsp;</p>\n<h2>https的通信过程：</h2>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; 过程大致如下：</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; 1） SSL客户端通过TCP和服务器建立连接之后（443端口），并且在一般的tcp连接协商（握手）过程中请求证书。</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 即客户端发出一个消息给服务器，这个消息里面包含了自己可实现的算法列表和其它一些需要的消息，SSL的服务器端会回应一个数据包，这里面确定了这次通信所需要的算法，然后服务器向客户端返回证书。（证书里面包含了服务器信息：域名。申请证书的公司，公共秘钥）。 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp;2）Client在收到服务器返回的证书后，判断签发这个证书的公共签发机构，并使用这个机构的公共秘钥确认签名是否有效，客户端还会确保证书中列出的域名就是它正在连接的域名。</div>\n<div>&nbsp; &nbsp; &nbsp; &nbsp;3） &nbsp;如果确认证书有效，那么生成对称秘钥并使用服务器的公共秘钥进行加密。然后发送给服务器，服务器使用它的私钥对它进行解密，这样两台计算机可以开始进行对称加密进行通信。</div>\n<div>&nbsp;</div>\n<p>https通信的优点：</p>\n<p>1）客户端产生的密钥只有客户端和服务器端能得到；</p>\n<p>2）加密的数据只有客户端和服务器端才能得到明文；</p>\n<p>3）客户端到服务端的通信是安全的。</p>\n<p>&nbsp;</p>\n<h1>HTTP7种请求方法：</h1>\n<p>GET、POST、HEAD、OPTIONS、PUT、DELETE和TARCE</p>\n<table style=\"height: 400px;\" border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n<tbody>\n<tr>\n<td>方法</td>\n<td>作用</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>请求获取由 Request-URI 所标识的资源</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>请求服务器接收在请求中封装的实体，并将其作为由 Request-Line 中的 Request-URI 所标识的资源的一部分</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>请求获取由 Request-URI 所标识的资源的响应消息报头</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>\n<p>请求服务器存储一个资源，并用 Request-URI 作为其标识符</p>\n</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>请求服务器删除由 Request-URI 所标识的资源</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>请求服务器回送到的请求信息，主要用于测试或诊断</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>保留将来使用</td>\n</tr>\n<tr>\n<td>OPTIONS</td>\n<td>请求查询服务器的性能，或者查询与资源相关的选项和需求</td>\n</tr>\n</tbody>\n</table>\n<p>&nbsp;</p>\n<h2>浏览器对url长度限制</h2>\n<div>IE : 2803</div>\n<div>Firefox:65536</div>\n<div>Chrome:8182</div>\n<div>Safari:80000</div>\n<div>Opera:190000</div>\n<div>&nbsp;</div>\n<div>&nbsp;</div>\n<h2>GET与POST方法有以下区别：</h2>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1、&nbsp; 在客户端，Get方式在通过URL提交数据，数据在URL中可以看到；POST方式，数据放在HTTP包的body中。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2、 GET方式提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST则没有此限制。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3、安全性问题。正如在（1）中提到，使用 Get 的时候，参数会显示在地址栏上，而 Post 不会。所以，如果这些数据是中文数据而且是非敏感数据，那么使用 get；如果用户输入的数据不是中文字符而且包含敏感数据，那么还是使用 post为好。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4.、服务器取值方式不一样。GET方式取值，如php可以使用$_GET来取得变量的值，而POST方式通过$_POST来获取变量的值。</p>\n<p>&nbsp;</p>\n<h2>HRAD方法：</h2>\n<p>&nbsp;HEAD 方法与 GET 方法几乎是相同的，它们的区别在于 HEAD 方法只是请求消息报头，而不是完整的内容。对于 HEAD 请求的回应部分来说，它的 HTTP 头部中包含的信息与通过 GET 请求所得到的信息是相同的。利用这个方法，不必传输整个资源内容，就可以得到 Request-URI 所标识的资源的信息。这个方法通常被用于测试超链接的有效性，是否可以访问，以及最近是否更新。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;要注意的是，在 HTML 文档中，书写 get 和 post，大小写都可以，但在 HTTP 协议中的 GET 和 POST 只能是大写形式。</p>\n<p>&nbsp;</p>\n<div>&nbsp;</div>', 'HTTP协议\n\nHTTP协议（HyperText Transfer Protocol，超文本传输协议），是用于从www服务器传输超文本到本地浏览器的传送协议。\n\nTCP：Transmission Control Protocol传输控制协议\n\nIP：Internet Protocol网际协议\n\n\n\n\nHTTP请求响应模型\n\nHTTP由请求和响应构成，是一个标准的客户端服务器模型（B/S）。HTTP协议永远都是客户端发起请求，服务器回送响应。\n\nHTTP是一个无状态的协议，无状态指客户端和服务端之间不建立持久的连接，这意味着当客户端向服务端发送请求（request），服务端返回响应（response）之后，连接就会被关闭，在服务器端不保留连接相关的信息。\n\nHTTPs\n\nhttps = http + ssl(安全套接层)\n\n\n\n\nHTTPS（全称：Hypertext Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL。其所用的端口号是443。\n\n\n\n\nSSL：安全套接层，是netscape公司设计的主要用于web的安全传输协议。这种协议在WEB上获得了广泛的应用。通过证书认证来确保客户端和网站服务器之间的通信数据是加密安全的。\n\n\n\n有两种基本的加解密算法类型：\n\n      1）对称加密（symmetric encryption）：密钥只有一个，加密解密为同一个密码，且加解密速度快，典型的对称加密算法有DES、AES，RC5，3DES等；\n\n       对称加密主要问题是共享秘钥，除你的计算机（客户端）知道另外一台计算机（服务器）的私钥秘钥，否则无法对通信流进行加密解密。解决这个问题的方案非对称秘钥。\n\n      2）非对称加密：使用两个秘钥：公共秘钥和私有秘钥。私有秘钥由一方密码保存（一般是服务器保存），另一方任何人都可以获得公共秘钥。\n\n      这种密钥成对出现（且根据公钥无法推知私钥，根据私钥也无法推知公钥），加密解密使用不同密钥（公钥加密需要私钥解密），相对对称加密速度较慢，典型的非对称加密算法有RSA、DSA等。\n\n\n\n\nhttps的通信过程：\n        过程大致如下：\n        1） SSL客户端通过TCP和服务器建立连接之后（443端口），并且在一般的tcp连接协商（握手）过程中请求证书。\n              即客户端发出一个消息给服务器，这个消息里面包含了自己可实现的算法列表和其它一些需要的消息，SSL的服务器端会回应一个数据包，这里面确定了这次通信所需要的算法，然后服务器向客户端返回证书。（证书里面包含了服务器信息：域名。申请证书的公司，公共秘钥）。                 \n       2）Client在收到服务器返回的证书后，判断签发这个证书的公共签发机构，并使用这个机构的公共秘钥确认签名是否有效，客户端还会确保证书中列出的域名就是它正在连接的域名。\n       3）  如果确认证书有效，那么生成对称秘钥并使用服务器的公共秘钥进行加密。然后发送给服务器，服务器使用它的私钥对它进行解密，这样两台计算机可以开始进行对称加密进行通信。\n\n\n\nhttps通信的优点：\n\n1）客户端产生的密钥只有客户端和服务器端能得到；\n\n2）加密的数据只有客户端和服务器端才能得到明文；\n\n3）客户端到服务端的通信是安全的。\n\n\n\n\nHTTP7种请求方法：\n\nGET、POST、HEAD、OPTIONS、PUT、DELETE和TARCE\n\n方法	作用\nGET	请求获取由 Request-URI 所标识的资源\nPOST	请求服务器接收在请求中封装的实体，并将其作为由 Request-Line 中的 Request-URI 所标识的资源的一部分\nHEAD	请求获取由 Request-URI 所标识的资源的响应消息报头\nPUT	\n\n请求服务器存储一个资源，并用 Request-URI 作为其标识符\n\n\nDELETE	请求服务器删除由 Request-URI 所标识的资源\nTRACE	请求服务器回送到的请求信息，主要用于测试或诊断\nCONNECT	保留将来使用\nOPTIONS	请求查询服务器的性能，或者查询与资源相关的选项和需求\n\n\n\n\n浏览器对url长度限制\nIE : 2803\nFirefox:65536\nChrome:8182\nSafari:80000\nOpera:190000\n\n\n\n\nGET与POST方法有以下区别：\n\n      1、  在客户端，Get方式在通过URL提交数据，数据在URL中可以看到；POST方式，数据放在HTTP包的body中。\n\n      2、 GET方式提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST则没有此限制。\n\n      3、安全性问题。正如在（1）中提到，使用 Get 的时候，参数会显示在地址栏上，而 Post 不会。所以，如果这些数据是中文数据而且是非敏感数据，那么使用 get；如果用户输入的数据不是中文字符而且包含敏感数据，那么还是使用 post为好。\n\n      4.、服务器取值方式不一样。GET方式取值，如php可以使用$_GET来取得变量的值，而POST方式通过$_POST来获取变量的值。\n\n\n\n\nHRAD方法：\n\n HEAD 方法与 GET 方法几乎是相同的，它们的区别在于 HEAD 方法只是请求消息报头，而不是完整的内容。对于 HEAD 请求的回应部分来说，它的 HTTP 头部中包含的信息与通过 GET 请求所得到的信息是相同的。利用这个方法，不必传输整个资源内容，就可以得到 Request-URI 所标识的资源的信息。这个方法通常被用于测试超链接的有效性，是否可以访问，以及最近是否更新。\n\n    要注意的是，在 HTML 文档中，书写 get 和 post，大小写都可以，但在 HTTP 协议中的 GET 和 POST 只能是大写形式。\n\n\n\n\n\n', '2', NULL, '1', '2020-05-02 16:28:36', '2020-05-11 22:28:52');

-- ----------------------------
-- Table structure for t_article_type
-- ----------------------------
DROP TABLE IF EXISTS `t_article_type`;
CREATE TABLE `t_article_type`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `photoPath` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `description` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `sortNo` int(0) DEFAULT NULL,
  `createUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_article_type
-- ----------------------------
INSERT INTO `t_article_type` VALUES ('t1', 'web学习', '/file/download/7318e36c63e142e0988d682030737d10.jpg', '这是第三个分类\n这是第三个分类\n这是第三个分类', 2, NULL, '2020-04-08 19:57:59', '2020-04-08 19:58:13');
INSERT INTO `t_article_type` VALUES ('t2', 'javascript', '/file/download/f260d1914ad4413880d37f18fbb5cfdc.jpg', 'asdasdasd', 1, NULL, '2020-04-07 22:09:42', '2020-04-10 20:31:07');
INSERT INTO `t_article_type` VALUES ('t3', '分类六', '/file/download/3635f62a252347f09ca8dcae028a10ef.jpg', '啊实打实', 4, NULL, '2020-04-08 21:15:03', '2020-05-01 17:32:07');
INSERT INTO `t_article_type` VALUES ('t4', '分类五', '/file/download/2116a736ab8a45c1b838a2840ac86961.jpg', 'cascade', 6, NULL, '2020-04-08 21:14:38', NULL);
INSERT INTO `t_article_type` VALUES ('t5', '分类四', '/file/download/00ebf34a41f448c795a872bc26ddf85d.jpg', 'ccc', 5, NULL, '2020-04-08 21:14:22', NULL);
INSERT INTO `t_article_type` VALUES ('t6', '日常打卡', '/file/download/3ecb7ace6d5046bca1711e5a54c561b2.jpg', '用于记录打卡', 3, NULL, '2020-04-07 22:10:26', '2020-04-28 23:14:30');

-- ----------------------------
-- Table structure for t_goods
-- ----------------------------
DROP TABLE IF EXISTS `t_goods`;
CREATE TABLE `t_goods`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `pinming` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `danwei` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `guige` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `jinjia` float(11, 2) DEFAULT NULL,
  `remark` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `stock` float(11, 0) DEFAULT 0 COMMENT '库存',
  `totalMoney` float(11, 0) DEFAULT 0,
  `createUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_goods
-- ----------------------------
INSERT INTO `t_goods` VALUES ('12', '三角燕', 'g', '半干挑', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('14', '阿胶', '盒', '同仁堂', 0.00, '', 0, 0, '3', NULL, '2020-03-24 12:22:14');
INSERT INTO `t_goods` VALUES ('15', '白莲子', '包', '建宁', 0.00, '', 0, 0, '3', NULL, '2020-03-24 17:03:29');
INSERT INTO `t_goods` VALUES ('16', '西洋参', 'g', '山东2.5g', 0.00, '', 0, 0, '3', NULL, '2020-03-24 17:02:08');
INSERT INTO `t_goods` VALUES ('17', '海马', 'g', '本港1个以下', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('18', '虫草花', '包', '大', 0.00, '', 0, 0, '3', NULL, '2020-03-24 21:32:48');
INSERT INTO `t_goods` VALUES ('19', '西洋参节', 'g', '国产', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('1b442e206c0911eaa60bcb95426e4e52', 'h6u', '7', '6h顶顶顶', 0.00, '7', 1, 1, NULL, '2020-03-22 14:48:15', '2020-03-23 15:17:36');
INSERT INTO `t_goods` VALUES ('2', '石斛', 'g', '好', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('20', '燕碎', 'g', '小燕碎', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('21', '四物', '包', '35g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('22', '血茸片', 'g', '血片', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('23', '雪蛤膏', '盒', '25g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('24', '黄芪', '包', '斜片', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('2472f3106db611eab0165fa4aaf40047', '测试', '1', '啊倒萨', 2.00, '21', 0, 0, NULL, '2020-03-24 17:59:25', '2020-03-25 15:54:05');
INSERT INTO `t_goods` VALUES ('25', '高丽参', 'g', 'g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('26', '红参', 'g', 'g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('27', '囊丝燕碎', 'g', '囊丝', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('28', '西洋参', 'g', 'g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('29', '燕窝-舒盏', 'g', 'g', 0.00, NULL, 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('3', '石斛', 'g', '普通', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('30', '西洋参', '个', '加拿大3克尖', 0.00, '', 0, 0, '3', NULL, '2020-03-25 12:42:45');
INSERT INTO `t_goods` VALUES ('31', '黑枸杞', '包', '小', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('32', '田七', 'g', '60头', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('33', '阿胶糕', '盒', '500g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('34d718806cdf11ea8add0d775ec0cc54', 'asd', '231', 'asdqwdq', 123.00, '23', 0, 0, NULL, '2020-03-23 16:20:50', '2020-03-23 22:59:32');
INSERT INTO `t_goods` VALUES ('36', 'huangjq', '1', '1', 0.00, '1', 0, 0, '1', NULL, NULL);
INSERT INTO `t_goods` VALUES ('37', '西洋参（0.28）', 'g', 'g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('38', '石蜂糖', '包', '500g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('39', 'ceshi', 'g', 'g', 0.00, '1212', 0, 0, '1', NULL, NULL);
INSERT INTO `t_goods` VALUES ('4', '野生天麻', 'g', '小', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('40', '123', '123', '123', 0.00, '123', 0, 0, '1', NULL, NULL);
INSERT INTO `t_goods` VALUES ('41', '田七', 'g', '50头', 0.00, '', 0, 0, '1', NULL, NULL);
INSERT INTO `t_goods` VALUES ('5', '桃胶', 'g', '包', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('6', '党参', '包', '250g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('7', '银耳', '包', '250g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('8', '红枸杞', '包', '250g', 0.00, '', 0, 0, '3', NULL, NULL);
INSERT INTO `t_goods` VALUES ('9', '玛咖', 'g', 'g', 0.00, '', 0, 0, '3', NULL, NULL);

-- ----------------------------
-- Table structure for t_photo
-- ----------------------------
DROP TABLE IF EXISTS `t_photo`;
CREATE TABLE `t_photo`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `title` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `description` varchar(1000) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `photoDate` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_photo
-- ----------------------------
INSERT INTO `t_photo` VALUES ('3ab8db7058e111e992c301d103f503b1', 'sc', 'wc', '2019-04-09T16:00:00.000Z', NULL, '2019-04-07 10:59:58.760', NULL);
INSERT INTO `t_photo` VALUES ('79a4f280591111e9a04f61f98aad9d1e', 'asdzzzzzzzzzzzzzzz', 'asdasd', '2019-04-16T16:00:00.000Z', NULL, '2019-04-07 16:45:20.168', NULL);
INSERT INTO `t_photo` VALUES ('93bcd5f058d711e9a57f4109e0fd8d9a', 'ssssssss', '但是发射点发到付', '2019-04-08T16:00:00.000Z', NULL, '2019-04-07 09:50:53.136', NULL);
INSERT INTO `t_photo` VALUES ('bab71eb0591111e996e4530f61b26d0d', 'asd', 'asdasd', '2019-04-16T16:00:00.000Z', NULL, '2019-04-07 16:47:09.339', NULL);
INSERT INTO `t_photo` VALUES ('db7a1d00591111e98bdc9db0411f076b', 'asd', 'asdasd', '2019-04-16T16:00:00.000Z', NULL, '2019-04-07 16:48:04.304', NULL);
INSERT INTO `t_photo` VALUES ('dcb0ed20590211e9b649c9b5971bc302', 'dasd', 'asdasd', '2019-04-09T16:00:00.000Z', NULL, '2019-04-07 15:00:43.891', NULL);
INSERT INTO `t_photo` VALUES ('e06cbca0590211e9b649c9b5971bc302', 'fasdf', 'afasdfa', '2019-04-01T16:00:00.000Z', NULL, '2019-04-07 15:00:50.154', NULL);
INSERT INTO `t_photo` VALUES ('e4126e40591111e98bdc9db0411f076b', 'asd', 'asdasd', '2019-04-16T16:00:00.000Z', NULL, '2019-04-07 16:48:18.724', NULL);
INSERT INTO `t_photo` VALUES ('e5aa9840590211e9b649c9b5971bc302', 'asdf', 'adsf', '2019-04-09T16:00:00.000Z', NULL, '2019-04-07 15:00:58.948', NULL);
INSERT INTO `t_photo` VALUES ('e8953510590211e9b649c9b5971bc302', 'afdad', 'fadf', '2019-04-23T16:00:00.000Z', NULL, '2019-04-07 15:01:03.841', NULL);
INSERT INTO `t_photo` VALUES ('eb1b1ca0590211e9b649c9b5971bc302', 'asdfa', 'sdfasdf', '2019-04-09T16:00:00.000Z', NULL, '2019-04-07 15:01:08.074', NULL);
INSERT INTO `t_photo` VALUES ('ed529610590211e9b649c9b5971bc302', 'asdf', 'asdfasdf', '2019-04-02T16:00:00.000Z', NULL, '2019-04-07 15:01:11.793', NULL);
INSERT INTO `t_photo` VALUES ('f08d75c0590211e9b649c9b5971bc302', 'asdfa', 'dfasdf', '2019-04-17T16:00:00.000Z', NULL, '2019-04-07 15:01:17.212', NULL);
INSERT INTO `t_photo` VALUES ('f2dfa320590211e9b649c9b5971bc302', 'adf', 'adfa', '2019-04-16T16:00:00.000Z', NULL, '2019-04-07 15:01:21.106', NULL);
INSERT INTO `t_photo` VALUES ('f533a540590211e9b649c9b5971bc302', 'adf', 'adfadf', '2019-04-02T16:00:00.000Z', NULL, '2019-04-07 15:01:25.012', NULL);

-- ----------------------------
-- Table structure for t_trade_record
-- ----------------------------
DROP TABLE IF EXISTS `t_trade_record`;
CREATE TABLE `t_trade_record`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `goodsId` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `type` varchar(4) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `number` float(11, 2) DEFAULT NULL,
  `price` float(10, 2) DEFAULT NULL,
  `cost` float(10, 2) DEFAULT NULL,
  `tradeDate` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `remark` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_trade_record
-- ----------------------------
INSERT INTO `t_trade_record` VALUES ('07ed34c06e7011ea885e739bcea0c47e', '1b442e206c0911eaa60bcb95426e4e52', '0', 1.00, 1.00, NULL, '2020-03-25', NULL, NULL, '2020-03-25 16:10:03', NULL);

-- ----------------------------
-- Table structure for t_upload_file
-- ----------------------------
DROP TABLE IF EXISTS `t_upload_file`;
CREATE TABLE `t_upload_file`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `recordId` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `originalName` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `realName` varchar(40) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `belongUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_upload_file
-- ----------------------------
INSERT INTO `t_upload_file` VALUES ('063f8d004fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('063f8d014fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('063f8d024fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('063f8d034fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('21d024904fd811e98023cd6c81ecb071', 'bd87d5004fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '99a01c523ec1413a964b01949f692b61.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('25e4c2704fd811e98023cd6c81ecb071', 'ae0334d04fc811e99e909b53c09c29c6', '200812308231244_2.jpg', '93d33d3328cb4e319d27ae5023fc293c.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('33c7db50591211e99be409824f5828af', '3ab8db7058e111e992c301d103f503b1', '微信图片_20190319194900.jpg', '7ef29fa092a84831b95fe232a3aabf79.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('43644940591211e9bd6fcbf4fc85c20e', '3ab8db7058e111e992c301d103f503b1', '微信图片_20190307194223.jpg', 'd20869a7722443c4b526e18408be4f9a.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('440fd4a04fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('440fd4a14fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('440fd4a24fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('440fd4a34fd411e9a3d5eb4aa4f4dca1', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('509cabd1508811e9a920c52b47dcc571', '509cabd0508811e9a920c52b47dcc571', 'c9f1c139b6003af30f44ee573b2ac65c1038b629.jpg', '308958f896ef485381d4e69339a074cb.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('5315c5d0591211e9bd6fcbf4fc85c20e', '79a4f280591111e9a04f61f98aad9d1e', '微信图片_20190319194900.jpg', 'f30b9757bef94c2a898e846d229e95c6.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('5ac22cc1508811e9a920c52b47dcc571', '5ac22cc0508811e9a920c52b47dcc571', 'c9f1c139b6003af30f44ee573b2ac65c1038b629.jpg', '308958f896ef485381d4e69339a074cb.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('909d86b0509611e98dd8cf588f749f11', 'a0798190508911e99f0c1d75804f15ee', '微信图片_20190319194906.jpg', 'a306704e541340c3b944ed448d822273.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('93bd241058d711e9a57f4109e0fd8d9a', '93bcd5f058d711e9a57f4109e0fd8d9a', '微信图片_20190319194900.jpg', 'c359fb35782a4f0991b1f2561190a51b.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('956e06214fc811e99e909b53c09c29c6', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('956e06224fc811e99e909b53c09c29c6', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('96b8b5e0508911e99f0c1d75804f15ee', '96b88ed0508911e99f0c1d75804f15ee', '2012111719294197.jpg', '96386efe073f4fbd9aa0228d70ce1509.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('9ee4ebf0509611e98dd8cf588f749f11', 'a0798190508911e99f0c1d75804f15ee', '200812308231244_2.jpg', '914e01af1edb4d08ab6c86691a20f493.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('ad52f310594911e993847585d56810dc', '79a4f280591111e9a04f61f98aad9d1e', '微信图片_20190320233027.jpg', 'c23124b3de08436d871bbea9a0b73f41.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('b468c7904fc811e99e909b53c09c29c6', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('b468c7914fc811e99e909b53c09c29c6', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('bbd25bd04fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('bbd25bd14fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('bbd25bd24fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('bbd25bd34fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('bd87fc104fc811e99e909b53c09c29c6', 'bd87d5004fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', 'f6ed23de42e04df89bba8ece1acfcee0.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('c8ff77704fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('c8ff77714fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('c8ff77724fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('c8ff77734fd311e9a33ea90746a34bbb', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('cf8192e04fd311e9a104bd1f10e181a8', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('cf81b9f04fd311e9a104bd1f10e181a8', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('cf81b9f14fd311e9a104bd1f10e181a8', '956e06204fc811e99e909b53c09c29c6', '2012111719294197.jpg', '60e77806f4f144438aad7114b912d802.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('cf81b9f24fd311e9a104bd1f10e181a8', '956e06204fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', '25e3640bfab44b95b44b950d9a574eaf.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('d037c4814fc811e99e909b53c09c29c6', 'd037c4804fc811e99e909b53c09c29c6', '微信图片_20190319194906.jpg', 'd4d85da3bf0549e89265589f3dcdeeb7.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('d99c25b0594711e997aba398fa4f36b3', '3ab8db7058e111e992c301d103f503b1', '2012111719294197.jpg', '4e7f28694ded4d3f8936a968cb8d5ed9.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('da341ff0594711e997aba398fa4f36b3', '3ab8db7058e111e992c301d103f503b1', 'c9f1c139b6003af30f44ee573b2ac65c1038b629.jpg', '6b9020e83c2441a0963a9e5674e9175e.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('dac144c0594711e997aba398fa4f36b3', '3ab8db7058e111e992c301d103f503b1', '微信图片_20190319194906.jpg', '84a1daeaeff240048614fbd162fc8ba7.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('e614be60594711e9b7cb11285be71e30', '3ab8db7058e111e992c301d103f503b1', '2012111719294197.jpg', '4e7f28694ded4d3f8936a968cb8d5ed9.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('e6150c80594711e9b7cb11285be71e30', '3ab8db7058e111e992c301d103f503b1', 'c9f1c139b6003af30f44ee573b2ac65c1038b629.jpg', '6b9020e83c2441a0963a9e5674e9175e.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('e6150c81594711e9b7cb11285be71e30', '3ab8db7058e111e992c301d103f503b1', '微信图片_20190319194906.jpg', '84a1daeaeff240048614fbd162fc8ba7.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('ee8ef2f04fc811e9952d6fb248fc3f39', 'ee8ecbe04fc811e9952d6fb248fc3f39', '微信图片_20190319194906.jpg', 'f8117589c1c24420bab7705a20ab5a24.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('ee8ef2f14fc811e9952d6fb248fc3f39', 'ee8ecbe04fc811e9952d6fb248fc3f39', '微信图片_20190319194900.jpg', '8a456a782525409cba3a0df88ae29d11.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('ee8ef2f24fc811e9952d6fb248fc3f39', 'ee8ecbe04fc811e9952d6fb248fc3f39', '微信图片_20190307194223.jpg', 'c7c592ca1ad24458a9c84785329339ea.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('ee8ef2f34fc811e9952d6fb248fc3f39', 'ee8ecbe04fc811e9952d6fb248fc3f39', '200812308231244_2.jpg', 'f321a08ef5c746d89af35ff62d4fa9b1.jpg', NULL, NULL, NULL);
INSERT INTO `t_upload_file` VALUES ('ee8ef2f44fc811e9952d6fb248fc3f39', 'ee8ecbe04fc811e9952d6fb248fc3f39', '2012111719294197.jpg', 'ee9c6beaea3f4dda8cdd9021fb372104.jpg', NULL, NULL, NULL);

-- ----------------------------
-- Table structure for t_user
-- ----------------------------
DROP TABLE IF EXISTS `t_user`;
CREATE TABLE `t_user`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `sex` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `avatar` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_user
-- ----------------------------
INSERT INTO `t_user` VALUES ('000000', 'Admin', '0', '/file/download/0c78079c54d3461e94df7647be51cd23.png', NULL, '', '2020-04-18 19:37:23');
INSERT INTO `t_user` VALUES ('91641a80825111eaa7e9a51d45123d71', 'asdasdasd', '0', '/file/download/2057dd0c209f4ee59d4f36fa3c38c719.png', '1', '2020-04-19 23:22:23', '2020-05-02 12:12:41');

-- ----------------------------
-- Table structure for t_user_account
-- ----------------------------
DROP TABLE IF EXISTS `t_user_account`;
CREATE TABLE `t_user_account`  (
  `id` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `username` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `password` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `status` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `userId` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createUser` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `createTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `updateTime` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of t_user_account
-- ----------------------------
INSERT INTO `t_user_account` VALUES ('1', 'admin', '111111', '1', '000000', NULL, NULL, '2020-05-02 13:57:32');
INSERT INTO `t_user_account` VALUES ('935451c0825111eaa7e9a51d45123d71', 'asdasdasd', '000000', '0', '91641a80825111eaa7e9a51d45123d71', '1', '2020-04-19 23:22:26', NULL);

-- ----------------------------
-- View structure for vw_trade_info
-- ----------------------------
DROP VIEW IF EXISTS `vw_trade_info`;
CREATE ALGORITHM = UNDEFINED DEFINER = `root`@`localhost` SQL SECURITY DEFINER VIEW `vw_trade_info` AS select `t_trade_record`.`id` AS `id`,`t_trade_record`.`goodsId` AS `goodsId`,`t_trade_record`.`type` AS `type`,`t_trade_record`.`number` AS `number`,`t_trade_record`.`price` AS `price`,`t_trade_record`.`cost` AS `cost`,`t_trade_record`.`tradeDate` AS `tradeDate`,`t_trade_record`.`remark` AS `remark`,`t_trade_record`.`belongUserId` AS `belongUserId`,`t_trade_record`.`createTime` AS `createTime`,`t_trade_record`.`updateTime` AS `updateTime`,concat(`t_goods`.`pinming`,'（规格：',`t_goods`.`guige`,'）') AS `pinming` from (`t_trade_record` join `t_goods` on((`t_trade_record`.`goodsId` = `t_goods`.`id`)));

SET FOREIGN_KEY_CHECKS = 1;
